//defines normal encoding functions found at:
//http://aras-p.info/texts/CompactNormalStorage.html

//#if !defined(_NORMAL_ENCODING_H)
//#define _NORMAL_ENCODING_H

//assume view space normals per pixel
/* half2 encode (float3 n) */
/* { */
/*     return half2(n.xy); */
/* } */
/* half3 decode (half4 enc) */
/* { */
/*     half3 n = enc.xyz; */
/*     //n.xy = enc*2-1; */
/*     n.z = sqrt(1+dot(n.xy,-n.xy)); */
/*     return n; */
/* } */

/* #define kPI 3.1415926536f */
/* half2 encode (half3 n) */
/* { */
/*   //return (half2(atan2(n.y,n.x)/kPI, n.z)+1.0)*0.5; */
/*   return (half2(atan2(n.y,n.x)/kPI, n.z)); */
/* } */
/* half3 decode (half4 enc) */
/* { */
/*     half2 ang = enc.xy; */
/*     half2 scth; */
/*     sincos(ang.x * kPI, scth.x, scth.y); */
/*     half2 scphi = half2(sqrt(1.0 - ang.y*ang.y), ang.y); */
/*     return half3(scth.y*scphi.x, scth.x*scphi.x, scphi.y); */
/* } */

//sterographics

half2 encode (half3 n)
{
    half scale = 1.7777;
    half2 enc = n.xy / (n.z+1);
    enc /= scale;
    enc = enc*0.5+0.5;
    return enc;
}
half3 decode (half4 enc)
{
    half scale = 1.7777;
    half3 nn =
      enc.xyz*half3(2*scale,2*scale,0) +
      half3(-scale,-scale,1);
    
    half g = 2.0 / dot(nn.xyz,nn.xyz);
    half3 n;
    n.xy = g*nn.xy;
    n.z = g-1;
    return n;
}


//sphere

/* half2 encode (half3 n) */
/* { */
/*     half f = sqrt(8*n.z+8); */
/*     return n.xy / f + 0.5; */
/* } */

/* half3 decode (half4 enc) */
/* { */
/*     half2 fenc = enc*4-2; */
/*     half f = dot(fenc,fenc); */
/*     half g = sqrt(1-f/4); */
/*     half3 n; */
/*     n.xy = fenc*g; */
/*     n.z = 1-f/2; */
/*     return n; */
/*     //return enc; */
/* } */

/* half2 encode (half3 n) */
/* { */
/*     half f = sqrt(8*n.z+8); */
/*     return n.xy / f + 0.5; */
/* } */
/* half3 decode (half4 enc) */
/* { */
/*     half2 fenc = enc*4-2; */
/*     half f = dot(fenc,fenc); */
/*     half g = sqrt(1-f/4); */
/*     half3 n; */
/*     n.xy = fenc*g; */
/*     n.z = 1-f/2; */
/*     return n; */
/* } */

/* #define kPI 3.1415926536f */
/* half4 encode (half3 n) */
/* { */
/*     return half4((half2(atan2(n.y,n.x)/kPI, n.z)+1.0)*0.5,0,0); */
/* } */
/* half3 decode (half2 enc) */
/* { */
/*     half2 ang = enc*2-1; */
/*     half2 scth; */
/*     sincos(ang.x * kPI, scth.x, scth.y); */
/*     half2 scphi = half2(sqrt(1.0 - ang.y*ang.y), ang.y); */
/*     return half3(scth.y*scphi.x, scth.x*scphi.x, scphi.y); */
/* } */
/* half4 encode (half3 n) */
/* { */
/*     return half4(n.xy,0,0); */
/* } */
/* half3 decode (half4 enc) */
/* { */
/*     half3 n; */
/*     n.xy = enc; */
/*     n.z = sqrt(1-dot(n.xy, n.xy)); */
/*     //return enc; */
/*     return n; */
/* } */


//#endif //define normal encoding
